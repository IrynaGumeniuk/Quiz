let Html1 = []; 
let Html2 = []; 
let Html3 = []; 
let Css1 = []; 
let Css2 = []; 
let Css3 = []; 
let Js1 = []; 
let Js2 = []; 
let Js3 = []; 

let n = 0;  

const questions = [ 
  {
    question: "–Ø–∫–∞ –º–æ–≤–∞ –ø—Ä–∞—Ü—é—î —É –±—Ä–∞—É–∑—É—Ä—ñ?",
    answers: ["Java", "C", "Python", "JavaScript"],
    correct: 4,
    topic: "JS",
    level: 2,
  },
  {
    question: "–¢–µ–≥- —Ü–µ?",
    answers: ["–∫–æ–¥ –¥–ª—è –≤–∏–∑–Ω–∞—á–µ–Ω–Ω—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –≤–µ–±-—Å—Ç–æ—Ä—ñ–Ω–æ–∫", 
              "–∫–æ–º–∞–Ω–¥–∞ —É –º–æ–≤—ñ HTML", "–±—É–¥—å-—è–∫–µ —Ç–µ–∫—Å—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è, —â–æ —Ä–æ–∑—Ç–∞—à–æ–≤–∞–Ω–µ –≤ –∫—É—Ç–æ–≤–∏—Ö –¥—É–∂–∫–∞—Ö", 
              "–Ω–∞—Å—Ç—Ä–æ—é–≤–∞–Ω–Ω—è –≤–∏–≥–ª—è–¥—É —á–∞—Å—Ç–∏–Ω–∏ –≤–µ–±-—Å—Ç–æ—Ä—ñ–Ω–∫–∏ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥—É"],
    correct: 2,
    topic: "HTML",
    level: 1,
  },
  { 
    question: "–©–æ –æ–∑–Ω–∞—á–∞—î CSS?",
    answers: ["Central Style Sheets",
              "Cascading Style Sheets",
              "Cascading Simple Sheets", 
              "Cars SUVs Sailboats"],
    correct: 2,
    topic: "CSS",
    level: 1,
  },
  {
    question: "–©–æ –æ–∑–Ω–∞—á–∞—î HTML?",
    answers: ["Hypertext Markup Language", 
              "Hypertext Markdown Language", 
              "Hyperloop Machine Language", 
              "Helicopters Terminals Motorboats Lamborginis"],
    correct: 1,
    topic: "HTML",
    level: 1, 
  },
  {
    question: "–ê—Ç—Ä–∏–±—É—Ç- —Ü–µ?",
    answers: ["—Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ —Ç–µ–≥—É, —â–æ –≤–ø–ª–∏–≤–∞—î –Ω–∞ —Å—Ç–≤–æ—Ä—é–≤–∞–Ω–∏–π –Ω–∏–º –µ—Ñ–µ–∫—Ç", 
              "—Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ —Ç–µ–≥—É, —â–æ –≤–∏–≤—á–∞—î –º—ñ—Å—Ü–µ –π–æ–≥–æ —Ä–æ–∑—Ç–∞—à—É–≤–∞–Ω–Ω—è –≤ HTML- –¥–æ–∫—É–º–µ–Ω—Ç—ñ", 
              "—Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ –∫–æ–ª—å–æ—Ä—ñ–≤ —Ç–µ–∫—Å—Ç—É —Ç–∞ —Ç–ª–∞ –≤–µ–±-—Å—Ç–æ—Ä—ñ–Ω–∫–∏", 
              "–≤–ª–∞—Å—Ç–∏–≤—ñ—Å—Ç—å —Ç–µ–≥—É"],
    correct: 4,
    topic: "HTML",
    level: 1,
  },
  {
    question: "–í —è–∫–æ–º—É HTML –µ–ª–µ–º–µ–Ω—Ç—ñ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø—ñ–¥–∫–ª—é—á–∞—Ç–∏ CSS —Ñ–∞–π–ª??",
    answers: ["< body >", "< head >", "–í–∫—ñ–Ω—Ü—ñ –¥–æ–∫—É–º–µ–Ω—Ç–∞", "< script >"],
    correct: 2,
    topic: "HTML",
    level: 2,
  },
  {
    question: "–Ø–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –¥–æ–¥–∞–≤–∞—Ç–∏ –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ –≤ CSS –¥–æ–∫—É–º–µ–Ω—Ç?",
    answers: ["< !-- –∫–æ–º–µ–Ω—Ç–∞—Ä --> ", " /* –∫–æ–º–µ–Ω—Ç–∞—Ä */ ", "// –∫–æ–º–µ–Ω—Ç–∞—Ä", "// –∫–æ–º–µ–Ω—Ç–∞—Ä // "],
    correct: 2,
    topic: "CSS",
    level: 2,
  },
  {
    question: " –í–∏–±–µ—Ä—ñ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π CSS —Å–∏–Ω—Ç–∞–∫—Å–∏—Å ",
    answers: ["{div;color:black;}", "div:color=black;", "div {color: black;}", "{div:color=black;} "],
    correct: 3,
    topic: "CSS",
    level: 2,
  },
  {
    question: "–í —è–∫–æ–º—É —Ä–æ—Ü—ñ –±—É–≤ —Å—Ç–≤–æ—Ä–µ–Ω–Ω–∏–π JavaScript?",
    answers: ["1996", "1995", "1994", "–≤—Å–µ –æ—Ç–≤–µ—Ç—ã –Ω–µ–≤–µ—Ä–Ω—ã–µ"],
    correct: 2,
    topic: "JS",
    level: 3,
  },
  {
    question: "–•—Ç–æ —Å—Ç–≤–æ—Ä–∏–≤ Javascript?",
    answers: ["–¢—ñ–º –ë–µ—Ä–Ω–µ—Ä –õ—ñ", "–°—Ç—ñ–≤ –î–∂–æ–±—Å", "–õ–∞—Ä—ñ –ü–µ–π–¥–∂", "–ë—Ä–µ–Ω–¥–∞–Ω –ê–π–∫", "–ë—ñ–ª –ì–µ–π—Ç—Å"],
    correct: 4,
    topic: "JS",
    level: 3,
  },
  {
    question: "–Ø–∫–∞ –∫–æ–º–ø–∞–Ω—ñ—è –∑–∞–ø–æ—á–∞—Ç–∫—É–≤–∞–ª–∞ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è Javascript?",
    answers: ["Netscape", "Microsoft", "Google", "Apple"],
    correct: 1,
    topic: "JS",
    level: 3,
  },
  {
    question: "Javascript —î —Ä–µ–≥—ñ—Å—Ç—Ä–æ - –∑–∞–ª–µ–∂–Ω–æ—é —á–∏ –Ω–µ–∑–∞–ª–µ–∂–Ω–æ—é –º–æ–≤–æ—é –ø—Ä–æ–≥—Ä–∞–º—É–≤–∞–Ω–Ω—è",
    answers: ["—Ç–∞–∫", "–Ω—ñ"],
    correct: 1,
    topic: "JS",
    level: 3,
  },
];

while (n < questions.length ) {
  let element = questions[n];

  switch (element.topic) {
    case "HTML" :
      switch (element.level) {
        case 1:
          Html1.push(element);
          break;
        
        case 2:
          Html2.push(element);
          break;

        case 3:
          Html3.push(element);
          break;
      };
      break;

      case "CSS" :
        switch (element.level) {
          case 1:
            Css1.push(element);
            break;
          
          case 2:
            Css2.push(element);
            break;
  
          case 3:
            Css3.push(element);
            break;
        };
        break;

        case "JS" :
          switch (element.level) {
            case 1:
              Js1.push(element);
              break;
            
            case 2:
              Js2.push(element);
              break;
    
            case 3:
              Js3.push(element);
              break;
          };
          break;
  };

  n++;
}


//Find elements
const headerContainer = document.querySelector("#header");
const listContainer = document.querySelector("#answers");
const submitBtn = document.querySelector("#submit");

//Variables
let score = 0;
let questionIndex = 0;

clearPage();
showQuestion();
submitBtn.onclick = checkAnswer;

//Clean HTML page and render current question
function clearPage(){
    headerContainer.innerHTML = " ";
    listContainer.innerHTML = " ";
};

function showQuestion(){
    //Question
    const headerTemplate = `<h2 class="title">%title%</h2>`;
    const title = headerTemplate.replace("%title%", questions[questionIndex]["question"]);
    headerContainer.innerHTML = title;


    //Answers
    let answerNumber = 1;
    for (answerText of questions[questionIndex]["answers"]){
        const questionTemplate = 
        `<li>
          <label>
            <input value="%number%" type="radio" class="answer" name="answer" />
            <span>%answer%</span>
          </label>
         </li>`;
        const answerHTML = questionTemplate
                            .replace("%answer%", answerText)
                            .replace("%number%", answerNumber);
        
        listContainer.innerHTML += answerHTML;
        answerNumber++;
    }
};

//Answer button
function checkAnswer(){
    const checkedRadio = listContainer.querySelector('input[type="radio"]:checked');
    
    //if any answer was selected
    if (!checkedRadio){
        submitBtn.blur();
        return
    };

    //Find checked answer number
    const userAnswer = parseInt(checkedRadio.value);

    //correct answer or not
    if (userAnswer === questions[questionIndex]["correct"]) {
        score++;
    }

    //last answer or not
    if (questionIndex !== questions.length - 1){
      questionIndex++;
      clearPage();
      showQuestion();
      return;
    } else {
      clearPage();
      showResults();
    };
};

function showResults() {
    const resultsTemplate = `
      <h2 class="title">%title%</h2>
      <h3 class="summary">%message%</h3>
      <p class="result">%result%</p>
      `;

    let title, message;

    if (score === questions.length) {
      title = "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üéâ";
      message = "–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –≤–µ—Ä–Ω–æ –Ω–∞ –≤—Å–µ –≤–æ–ø—Ä–æ—Å—ã! üòéüëç";
    } else if ((score * 100) / questions.length >= 50){
      title = "–ù–µ–ø–ª–æ—Ö–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç! üòâ";
      message = "–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –≤–µ—Ä–Ω–æ –Ω–∞ –±–æ–ª—å—à–µ –ø–æ–ª–æ–≤–∏–Ω—É –≤–æ–ø—Ä–æ—Å–æ–≤! üëç";
    } else {
      title = "–°—Ç–æ–∏—Ç –ø–æ—Å—Ç–∞—Ä–∞—Ç—å—Å—è...ü•∫ ";
      message = "–ü–æ–∫–∞ —É –≤–∞—Å –º–µ–Ω—å—à–µ –ø–æ–ª–æ–≤–∏–Ω—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤.";
    };

    //Result
    let result = `${score} –∏–∑ ${questions.length}`;

    //Final message
    const finalMessage = resultsTemplate
                          .replace("%title%", title)
                          .replace("%message%", message)
                          .replace("%result%", result);
    
    headerContainer.innerHTML = finalMessage;

    //Change button message to "Play again"
    submitBtn.blur();
    submitBtn.innerHTML = "–ù–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ";
    submitBtn.onclick = () => history.go();
};

